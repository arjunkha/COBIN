//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace COBIN.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CobinDBCon : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CobinDBCon object using the connection string found in the 'CobinDBCon' section of the application configuration file.
        /// </summary>
        public CobinDBCon() : base("name=CobinDBCon", "CobinDBCon")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CobinDBCon object.
        /// </summary>
        public CobinDBCon(string connectionString) : base(connectionString, "CobinDBCon")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CobinDBCon object.
        /// </summary>
        public CobinDBCon(EntityConnection connection) : base(connection, "CobinDBCon")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="password">No Metadata Documentation available.</param>
        public ObjectResult<PlsUserAuthentication_Result> PlsUserAuthentication(global::System.String userName, global::System.String password)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("Password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("Password", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PlsUserAuthentication_Result>("PlsUserAuthentication", userNameParameter, passwordParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="oldPassword">No Metadata Documentation available.</param>
        /// <param name="newPassword">No Metadata Documentation available.</param>
        /// <param name="fullName">No Metadata Documentation available.</param>
        /// <param name="mobileNumber">No Metadata Documentation available.</param>
        /// <param name="emailAddress">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<sPlsUsers_Result> sPlsUsers(global::System.String flag, Nullable<global::System.Int32> userId, global::System.String userName, global::System.String oldPassword, global::System.String newPassword, global::System.String fullName, global::System.String mobileNumber, global::System.String emailAddress, global::System.String status, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Int32));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter oldPasswordParameter;
            if (oldPassword != null)
            {
                oldPasswordParameter = new ObjectParameter("OldPassword", oldPassword);
            }
            else
            {
                oldPasswordParameter = new ObjectParameter("OldPassword", typeof(global::System.String));
            }
    
            ObjectParameter newPasswordParameter;
            if (newPassword != null)
            {
                newPasswordParameter = new ObjectParameter("NewPassword", newPassword);
            }
            else
            {
                newPasswordParameter = new ObjectParameter("NewPassword", typeof(global::System.String));
            }
    
            ObjectParameter fullNameParameter;
            if (fullName != null)
            {
                fullNameParameter = new ObjectParameter("FullName", fullName);
            }
            else
            {
                fullNameParameter = new ObjectParameter("FullName", typeof(global::System.String));
            }
    
            ObjectParameter mobileNumberParameter;
            if (mobileNumber != null)
            {
                mobileNumberParameter = new ObjectParameter("MobileNumber", mobileNumber);
            }
            else
            {
                mobileNumberParameter = new ObjectParameter("MobileNumber", typeof(global::System.String));
            }
    
            ObjectParameter emailAddressParameter;
            if (emailAddress != null)
            {
                emailAddressParameter = new ObjectParameter("EmailAddress", emailAddress);
            }
            else
            {
                emailAddressParameter = new ObjectParameter("EmailAddress", typeof(global::System.String));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.String));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<sPlsUsers_Result>("sPlsUsers", flagParameter, userIdParameter, userNameParameter, oldPasswordParameter, newPasswordParameter, fullNameParameter, mobileNumberParameter, emailAddressParameter, statusParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="id_Institution">No Metadata Documentation available.</param>
        /// <param name="surveyName">No Metadata Documentation available.</param>
        /// <param name="survey_Code">No Metadata Documentation available.</param>
        /// <param name="survey_Instructions">No Metadata Documentation available.</param>
        /// <param name="miscellaneousInfo">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<sPlsSVQHeaders_Result> sPlsSVQHeaders(global::System.String flag, Nullable<global::System.Int32> id, Nullable<global::System.Int32> id_Institution, global::System.String surveyName, global::System.String survey_Code, global::System.String survey_Instructions, global::System.String miscellaneousInfo, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("Id", id);
            }
            else
            {
                idParameter = new ObjectParameter("Id", typeof(global::System.Int32));
            }
    
            ObjectParameter id_InstitutionParameter;
            if (id_Institution.HasValue)
            {
                id_InstitutionParameter = new ObjectParameter("Id_Institution", id_Institution);
            }
            else
            {
                id_InstitutionParameter = new ObjectParameter("Id_Institution", typeof(global::System.Int32));
            }
    
            ObjectParameter surveyNameParameter;
            if (surveyName != null)
            {
                surveyNameParameter = new ObjectParameter("SurveyName", surveyName);
            }
            else
            {
                surveyNameParameter = new ObjectParameter("SurveyName", typeof(global::System.String));
            }
    
            ObjectParameter survey_CodeParameter;
            if (survey_Code != null)
            {
                survey_CodeParameter = new ObjectParameter("Survey_Code", survey_Code);
            }
            else
            {
                survey_CodeParameter = new ObjectParameter("Survey_Code", typeof(global::System.String));
            }
    
            ObjectParameter survey_InstructionsParameter;
            if (survey_Instructions != null)
            {
                survey_InstructionsParameter = new ObjectParameter("Survey_Instructions", survey_Instructions);
            }
            else
            {
                survey_InstructionsParameter = new ObjectParameter("Survey_Instructions", typeof(global::System.String));
            }
    
            ObjectParameter miscellaneousInfoParameter;
            if (miscellaneousInfo != null)
            {
                miscellaneousInfoParameter = new ObjectParameter("MiscellaneousInfo", miscellaneousInfo);
            }
            else
            {
                miscellaneousInfoParameter = new ObjectParameter("MiscellaneousInfo", typeof(global::System.String));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<sPlsSVQHeaders_Result>("sPlsSVQHeaders", flagParameter, idParameter, id_InstitutionParameter, surveyNameParameter, survey_CodeParameter, survey_InstructionsParameter, miscellaneousInfoParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="id_SVQ_Headers">No Metadata Documentation available.</param>
        /// <param name="section_Name">No Metadata Documentation available.</param>
        /// <param name="section_Title">No Metadata Documentation available.</param>
        /// <param name="section_Instructions">No Metadata Documentation available.</param>
        /// <param name="is_Required_Section">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<sPlsSVQSections_Result> sPlsSVQSections(global::System.String flag, Nullable<global::System.Int32> id, Nullable<global::System.Int32> id_SVQ_Headers, global::System.String section_Name, global::System.String section_Title, global::System.String section_Instructions, global::System.String is_Required_Section, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("Id", id);
            }
            else
            {
                idParameter = new ObjectParameter("Id", typeof(global::System.Int32));
            }
    
            ObjectParameter id_SVQ_HeadersParameter;
            if (id_SVQ_Headers.HasValue)
            {
                id_SVQ_HeadersParameter = new ObjectParameter("Id_SVQ_Headers", id_SVQ_Headers);
            }
            else
            {
                id_SVQ_HeadersParameter = new ObjectParameter("Id_SVQ_Headers", typeof(global::System.Int32));
            }
    
            ObjectParameter section_NameParameter;
            if (section_Name != null)
            {
                section_NameParameter = new ObjectParameter("Section_Name", section_Name);
            }
            else
            {
                section_NameParameter = new ObjectParameter("Section_Name", typeof(global::System.String));
            }
    
            ObjectParameter section_TitleParameter;
            if (section_Title != null)
            {
                section_TitleParameter = new ObjectParameter("Section_Title", section_Title);
            }
            else
            {
                section_TitleParameter = new ObjectParameter("Section_Title", typeof(global::System.String));
            }
    
            ObjectParameter section_InstructionsParameter;
            if (section_Instructions != null)
            {
                section_InstructionsParameter = new ObjectParameter("Section_Instructions", section_Instructions);
            }
            else
            {
                section_InstructionsParameter = new ObjectParameter("Section_Instructions", typeof(global::System.String));
            }
    
            ObjectParameter is_Required_SectionParameter;
            if (is_Required_Section != null)
            {
                is_Required_SectionParameter = new ObjectParameter("Is_Required_Section", is_Required_Section);
            }
            else
            {
                is_Required_SectionParameter = new ObjectParameter("Is_Required_Section", typeof(global::System.String));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<sPlsSVQSections_Result>("sPlsSVQSections", flagParameter, idParameter, id_SVQ_HeadersParameter, section_NameParameter, section_TitleParameter, section_InstructionsParameter, is_Required_SectionParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="id_SVQ_Sections">No Metadata Documentation available.</param>
        /// <param name="id_Input_Types">No Metadata Documentation available.</param>
        /// <param name="id_Option_Categories">No Metadata Documentation available.</param>
        /// <param name="question_Name">No Metadata Documentation available.</param>
        /// <param name="question_Subtext">No Metadata Documentation available.</param>
        /// <param name="question_Code">No Metadata Documentation available.</param>
        /// <param name="measurement_Unit">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<sPlsSVQQuestions_Result> sPlsSVQQuestions(global::System.String flag, Nullable<global::System.Int32> id, Nullable<global::System.Int32> id_SVQ_Sections, Nullable<global::System.Int32> id_Input_Types, Nullable<global::System.Int32> id_Option_Categories, global::System.String question_Name, global::System.String question_Subtext, global::System.String question_Code, global::System.String measurement_Unit, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("Id", id);
            }
            else
            {
                idParameter = new ObjectParameter("Id", typeof(global::System.Int32));
            }
    
            ObjectParameter id_SVQ_SectionsParameter;
            if (id_SVQ_Sections.HasValue)
            {
                id_SVQ_SectionsParameter = new ObjectParameter("Id_SVQ_Sections", id_SVQ_Sections);
            }
            else
            {
                id_SVQ_SectionsParameter = new ObjectParameter("Id_SVQ_Sections", typeof(global::System.Int32));
            }
    
            ObjectParameter id_Input_TypesParameter;
            if (id_Input_Types.HasValue)
            {
                id_Input_TypesParameter = new ObjectParameter("Id_Input_Types", id_Input_Types);
            }
            else
            {
                id_Input_TypesParameter = new ObjectParameter("Id_Input_Types", typeof(global::System.Int32));
            }
    
            ObjectParameter id_Option_CategoriesParameter;
            if (id_Option_Categories.HasValue)
            {
                id_Option_CategoriesParameter = new ObjectParameter("Id_Option_Categories", id_Option_Categories);
            }
            else
            {
                id_Option_CategoriesParameter = new ObjectParameter("Id_Option_Categories", typeof(global::System.Int32));
            }
    
            ObjectParameter question_NameParameter;
            if (question_Name != null)
            {
                question_NameParameter = new ObjectParameter("Question_Name", question_Name);
            }
            else
            {
                question_NameParameter = new ObjectParameter("Question_Name", typeof(global::System.String));
            }
    
            ObjectParameter question_SubtextParameter;
            if (question_Subtext != null)
            {
                question_SubtextParameter = new ObjectParameter("Question_Subtext", question_Subtext);
            }
            else
            {
                question_SubtextParameter = new ObjectParameter("Question_Subtext", typeof(global::System.String));
            }
    
            ObjectParameter question_CodeParameter;
            if (question_Code != null)
            {
                question_CodeParameter = new ObjectParameter("Question_Code", question_Code);
            }
            else
            {
                question_CodeParameter = new ObjectParameter("Question_Code", typeof(global::System.String));
            }
    
            ObjectParameter measurement_UnitParameter;
            if (measurement_Unit != null)
            {
                measurement_UnitParameter = new ObjectParameter("Measurement_Unit", measurement_Unit);
            }
            else
            {
                measurement_UnitParameter = new ObjectParameter("Measurement_Unit", typeof(global::System.String));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<sPlsSVQQuestions_Result>("sPlsSVQQuestions", flagParameter, idParameter, id_SVQ_SectionsParameter, id_Input_TypesParameter, id_Option_CategoriesParameter, question_NameParameter, question_SubtextParameter, question_CodeParameter, measurement_UnitParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="id_SVQ_Sections">No Metadata Documentation available.</param>
        /// <param name="id_Input_Types">No Metadata Documentation available.</param>
        /// <param name="id_Option_Categories">No Metadata Documentation available.</param>
        /// <param name="question_Name">No Metadata Documentation available.</param>
        /// <param name="question_Subtext">No Metadata Documentation available.</param>
        /// <param name="question_Code">No Metadata Documentation available.</param>
        /// <param name="measurement_Unit">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<uPlsSVQQuestions_Result> uPlsSVQQuestions(global::System.String flag, Nullable<global::System.Int32> id, Nullable<global::System.Int32> id_SVQ_Sections, Nullable<global::System.Int32> id_Input_Types, Nullable<global::System.Int32> id_Option_Categories, global::System.String question_Name, global::System.String question_Subtext, global::System.String question_Code, global::System.String measurement_Unit, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("Id", id);
            }
            else
            {
                idParameter = new ObjectParameter("Id", typeof(global::System.Int32));
            }
    
            ObjectParameter id_SVQ_SectionsParameter;
            if (id_SVQ_Sections.HasValue)
            {
                id_SVQ_SectionsParameter = new ObjectParameter("Id_SVQ_Sections", id_SVQ_Sections);
            }
            else
            {
                id_SVQ_SectionsParameter = new ObjectParameter("Id_SVQ_Sections", typeof(global::System.Int32));
            }
    
            ObjectParameter id_Input_TypesParameter;
            if (id_Input_Types.HasValue)
            {
                id_Input_TypesParameter = new ObjectParameter("Id_Input_Types", id_Input_Types);
            }
            else
            {
                id_Input_TypesParameter = new ObjectParameter("Id_Input_Types", typeof(global::System.Int32));
            }
    
            ObjectParameter id_Option_CategoriesParameter;
            if (id_Option_Categories.HasValue)
            {
                id_Option_CategoriesParameter = new ObjectParameter("Id_Option_Categories", id_Option_Categories);
            }
            else
            {
                id_Option_CategoriesParameter = new ObjectParameter("Id_Option_Categories", typeof(global::System.Int32));
            }
    
            ObjectParameter question_NameParameter;
            if (question_Name != null)
            {
                question_NameParameter = new ObjectParameter("Question_Name", question_Name);
            }
            else
            {
                question_NameParameter = new ObjectParameter("Question_Name", typeof(global::System.String));
            }
    
            ObjectParameter question_SubtextParameter;
            if (question_Subtext != null)
            {
                question_SubtextParameter = new ObjectParameter("Question_Subtext", question_Subtext);
            }
            else
            {
                question_SubtextParameter = new ObjectParameter("Question_Subtext", typeof(global::System.String));
            }
    
            ObjectParameter question_CodeParameter;
            if (question_Code != null)
            {
                question_CodeParameter = new ObjectParameter("Question_Code", question_Code);
            }
            else
            {
                question_CodeParameter = new ObjectParameter("Question_Code", typeof(global::System.String));
            }
    
            ObjectParameter measurement_UnitParameter;
            if (measurement_Unit != null)
            {
                measurement_UnitParameter = new ObjectParameter("Measurement_Unit", measurement_Unit);
            }
            else
            {
                measurement_UnitParameter = new ObjectParameter("Measurement_Unit", typeof(global::System.String));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<uPlsSVQQuestions_Result>("uPlsSVQQuestions", flagParameter, idParameter, id_SVQ_SectionsParameter, id_Input_TypesParameter, id_Option_CategoriesParameter, question_NameParameter, question_SubtextParameter, question_CodeParameter, measurement_UnitParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="id_SVQ_Sections">No Metadata Documentation available.</param>
        /// <param name="id_Input_Types">No Metadata Documentation available.</param>
        /// <param name="id_Option_Categories">No Metadata Documentation available.</param>
        /// <param name="question_Name">No Metadata Documentation available.</param>
        /// <param name="question_Subtext">No Metadata Documentation available.</param>
        /// <param name="question_Code">No Metadata Documentation available.</param>
        /// <param name="measurement_Unit">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<iPlsSVQQuestions_Result> iPlsSVQQuestions(global::System.String flag, Nullable<global::System.Int32> id, Nullable<global::System.Int32> id_SVQ_Sections, Nullable<global::System.Int32> id_Input_Types, Nullable<global::System.Int32> id_Option_Categories, global::System.String question_Name, global::System.String question_Subtext, global::System.String question_Code, global::System.String measurement_Unit, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("Id", id);
            }
            else
            {
                idParameter = new ObjectParameter("Id", typeof(global::System.Int32));
            }
    
            ObjectParameter id_SVQ_SectionsParameter;
            if (id_SVQ_Sections.HasValue)
            {
                id_SVQ_SectionsParameter = new ObjectParameter("Id_SVQ_Sections", id_SVQ_Sections);
            }
            else
            {
                id_SVQ_SectionsParameter = new ObjectParameter("Id_SVQ_Sections", typeof(global::System.Int32));
            }
    
            ObjectParameter id_Input_TypesParameter;
            if (id_Input_Types.HasValue)
            {
                id_Input_TypesParameter = new ObjectParameter("Id_Input_Types", id_Input_Types);
            }
            else
            {
                id_Input_TypesParameter = new ObjectParameter("Id_Input_Types", typeof(global::System.Int32));
            }
    
            ObjectParameter id_Option_CategoriesParameter;
            if (id_Option_Categories.HasValue)
            {
                id_Option_CategoriesParameter = new ObjectParameter("Id_Option_Categories", id_Option_Categories);
            }
            else
            {
                id_Option_CategoriesParameter = new ObjectParameter("Id_Option_Categories", typeof(global::System.Int32));
            }
    
            ObjectParameter question_NameParameter;
            if (question_Name != null)
            {
                question_NameParameter = new ObjectParameter("Question_Name", question_Name);
            }
            else
            {
                question_NameParameter = new ObjectParameter("Question_Name", typeof(global::System.String));
            }
    
            ObjectParameter question_SubtextParameter;
            if (question_Subtext != null)
            {
                question_SubtextParameter = new ObjectParameter("Question_Subtext", question_Subtext);
            }
            else
            {
                question_SubtextParameter = new ObjectParameter("Question_Subtext", typeof(global::System.String));
            }
    
            ObjectParameter question_CodeParameter;
            if (question_Code != null)
            {
                question_CodeParameter = new ObjectParameter("Question_Code", question_Code);
            }
            else
            {
                question_CodeParameter = new ObjectParameter("Question_Code", typeof(global::System.String));
            }
    
            ObjectParameter measurement_UnitParameter;
            if (measurement_Unit != null)
            {
                measurement_UnitParameter = new ObjectParameter("Measurement_Unit", measurement_Unit);
            }
            else
            {
                measurement_UnitParameter = new ObjectParameter("Measurement_Unit", typeof(global::System.String));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<iPlsSVQQuestions_Result>("iPlsSVQQuestions", flagParameter, idParameter, id_SVQ_SectionsParameter, id_Input_TypesParameter, id_Option_CategoriesParameter, question_NameParameter, question_SubtextParameter, question_CodeParameter, measurement_UnitParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="id_SVQ_Sections">No Metadata Documentation available.</param>
        /// <param name="id_Input_Types">No Metadata Documentation available.</param>
        /// <param name="id_Option_Categories">No Metadata Documentation available.</param>
        /// <param name="question_Name">No Metadata Documentation available.</param>
        /// <param name="question_Subtext">No Metadata Documentation available.</param>
        /// <param name="question_Code">No Metadata Documentation available.</param>
        /// <param name="measurement_Unit">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<dPlsSVQQuestions_Result> dPlsSVQQuestions(global::System.String flag, Nullable<global::System.Int32> id, Nullable<global::System.Int32> id_SVQ_Sections, Nullable<global::System.Int32> id_Input_Types, Nullable<global::System.Int32> id_Option_Categories, global::System.String question_Name, global::System.String question_Subtext, global::System.String question_Code, global::System.String measurement_Unit, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("Id", id);
            }
            else
            {
                idParameter = new ObjectParameter("Id", typeof(global::System.Int32));
            }
    
            ObjectParameter id_SVQ_SectionsParameter;
            if (id_SVQ_Sections.HasValue)
            {
                id_SVQ_SectionsParameter = new ObjectParameter("Id_SVQ_Sections", id_SVQ_Sections);
            }
            else
            {
                id_SVQ_SectionsParameter = new ObjectParameter("Id_SVQ_Sections", typeof(global::System.Int32));
            }
    
            ObjectParameter id_Input_TypesParameter;
            if (id_Input_Types.HasValue)
            {
                id_Input_TypesParameter = new ObjectParameter("Id_Input_Types", id_Input_Types);
            }
            else
            {
                id_Input_TypesParameter = new ObjectParameter("Id_Input_Types", typeof(global::System.Int32));
            }
    
            ObjectParameter id_Option_CategoriesParameter;
            if (id_Option_Categories.HasValue)
            {
                id_Option_CategoriesParameter = new ObjectParameter("Id_Option_Categories", id_Option_Categories);
            }
            else
            {
                id_Option_CategoriesParameter = new ObjectParameter("Id_Option_Categories", typeof(global::System.Int32));
            }
    
            ObjectParameter question_NameParameter;
            if (question_Name != null)
            {
                question_NameParameter = new ObjectParameter("Question_Name", question_Name);
            }
            else
            {
                question_NameParameter = new ObjectParameter("Question_Name", typeof(global::System.String));
            }
    
            ObjectParameter question_SubtextParameter;
            if (question_Subtext != null)
            {
                question_SubtextParameter = new ObjectParameter("Question_Subtext", question_Subtext);
            }
            else
            {
                question_SubtextParameter = new ObjectParameter("Question_Subtext", typeof(global::System.String));
            }
    
            ObjectParameter question_CodeParameter;
            if (question_Code != null)
            {
                question_CodeParameter = new ObjectParameter("Question_Code", question_Code);
            }
            else
            {
                question_CodeParameter = new ObjectParameter("Question_Code", typeof(global::System.String));
            }
    
            ObjectParameter measurement_UnitParameter;
            if (measurement_Unit != null)
            {
                measurement_UnitParameter = new ObjectParameter("Measurement_Unit", measurement_Unit);
            }
            else
            {
                measurement_UnitParameter = new ObjectParameter("Measurement_Unit", typeof(global::System.String));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<dPlsSVQQuestions_Result>("dPlsSVQQuestions", flagParameter, idParameter, id_SVQ_SectionsParameter, id_Input_TypesParameter, id_Option_CategoriesParameter, question_NameParameter, question_SubtextParameter, question_CodeParameter, measurement_UnitParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="id_SVQ_Headers">No Metadata Documentation available.</param>
        /// <param name="section_Name">No Metadata Documentation available.</param>
        /// <param name="section_Title">No Metadata Documentation available.</param>
        /// <param name="section_Instructions">No Metadata Documentation available.</param>
        /// <param name="is_Required_Section">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<uPlsSVQSections_Result> uPlsSVQSections(global::System.String flag, Nullable<global::System.Int32> id, Nullable<global::System.Int32> id_SVQ_Headers, global::System.String section_Name, global::System.String section_Title, global::System.String section_Instructions, global::System.String is_Required_Section, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("Id", id);
            }
            else
            {
                idParameter = new ObjectParameter("Id", typeof(global::System.Int32));
            }
    
            ObjectParameter id_SVQ_HeadersParameter;
            if (id_SVQ_Headers.HasValue)
            {
                id_SVQ_HeadersParameter = new ObjectParameter("Id_SVQ_Headers", id_SVQ_Headers);
            }
            else
            {
                id_SVQ_HeadersParameter = new ObjectParameter("Id_SVQ_Headers", typeof(global::System.Int32));
            }
    
            ObjectParameter section_NameParameter;
            if (section_Name != null)
            {
                section_NameParameter = new ObjectParameter("Section_Name", section_Name);
            }
            else
            {
                section_NameParameter = new ObjectParameter("Section_Name", typeof(global::System.String));
            }
    
            ObjectParameter section_TitleParameter;
            if (section_Title != null)
            {
                section_TitleParameter = new ObjectParameter("Section_Title", section_Title);
            }
            else
            {
                section_TitleParameter = new ObjectParameter("Section_Title", typeof(global::System.String));
            }
    
            ObjectParameter section_InstructionsParameter;
            if (section_Instructions != null)
            {
                section_InstructionsParameter = new ObjectParameter("Section_Instructions", section_Instructions);
            }
            else
            {
                section_InstructionsParameter = new ObjectParameter("Section_Instructions", typeof(global::System.String));
            }
    
            ObjectParameter is_Required_SectionParameter;
            if (is_Required_Section != null)
            {
                is_Required_SectionParameter = new ObjectParameter("Is_Required_Section", is_Required_Section);
            }
            else
            {
                is_Required_SectionParameter = new ObjectParameter("Is_Required_Section", typeof(global::System.String));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<uPlsSVQSections_Result>("uPlsSVQSections", flagParameter, idParameter, id_SVQ_HeadersParameter, section_NameParameter, section_TitleParameter, section_InstructionsParameter, is_Required_SectionParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="id_SVQ_Headers">No Metadata Documentation available.</param>
        /// <param name="section_Name">No Metadata Documentation available.</param>
        /// <param name="section_Title">No Metadata Documentation available.</param>
        /// <param name="section_Instructions">No Metadata Documentation available.</param>
        /// <param name="is_Required_Section">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<iPlsSVQSections_Result> iPlsSVQSections(global::System.String flag, Nullable<global::System.Int32> id, Nullable<global::System.Int32> id_SVQ_Headers, global::System.String section_Name, global::System.String section_Title, global::System.String section_Instructions, global::System.String is_Required_Section, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("Id", id);
            }
            else
            {
                idParameter = new ObjectParameter("Id", typeof(global::System.Int32));
            }
    
            ObjectParameter id_SVQ_HeadersParameter;
            if (id_SVQ_Headers.HasValue)
            {
                id_SVQ_HeadersParameter = new ObjectParameter("Id_SVQ_Headers", id_SVQ_Headers);
            }
            else
            {
                id_SVQ_HeadersParameter = new ObjectParameter("Id_SVQ_Headers", typeof(global::System.Int32));
            }
    
            ObjectParameter section_NameParameter;
            if (section_Name != null)
            {
                section_NameParameter = new ObjectParameter("Section_Name", section_Name);
            }
            else
            {
                section_NameParameter = new ObjectParameter("Section_Name", typeof(global::System.String));
            }
    
            ObjectParameter section_TitleParameter;
            if (section_Title != null)
            {
                section_TitleParameter = new ObjectParameter("Section_Title", section_Title);
            }
            else
            {
                section_TitleParameter = new ObjectParameter("Section_Title", typeof(global::System.String));
            }
    
            ObjectParameter section_InstructionsParameter;
            if (section_Instructions != null)
            {
                section_InstructionsParameter = new ObjectParameter("Section_Instructions", section_Instructions);
            }
            else
            {
                section_InstructionsParameter = new ObjectParameter("Section_Instructions", typeof(global::System.String));
            }
    
            ObjectParameter is_Required_SectionParameter;
            if (is_Required_Section != null)
            {
                is_Required_SectionParameter = new ObjectParameter("Is_Required_Section", is_Required_Section);
            }
            else
            {
                is_Required_SectionParameter = new ObjectParameter("Is_Required_Section", typeof(global::System.String));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<iPlsSVQSections_Result>("iPlsSVQSections", flagParameter, idParameter, id_SVQ_HeadersParameter, section_NameParameter, section_TitleParameter, section_InstructionsParameter, is_Required_SectionParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="id_SVQ_Headers">No Metadata Documentation available.</param>
        /// <param name="section_Name">No Metadata Documentation available.</param>
        /// <param name="section_Title">No Metadata Documentation available.</param>
        /// <param name="section_Instructions">No Metadata Documentation available.</param>
        /// <param name="is_Required_Section">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<dPlsSVQSections_Result> dPlsSVQSections(global::System.String flag, Nullable<global::System.Int32> id, Nullable<global::System.Int32> id_SVQ_Headers, global::System.String section_Name, global::System.String section_Title, global::System.String section_Instructions, global::System.String is_Required_Section, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("Id", id);
            }
            else
            {
                idParameter = new ObjectParameter("Id", typeof(global::System.Int32));
            }
    
            ObjectParameter id_SVQ_HeadersParameter;
            if (id_SVQ_Headers.HasValue)
            {
                id_SVQ_HeadersParameter = new ObjectParameter("Id_SVQ_Headers", id_SVQ_Headers);
            }
            else
            {
                id_SVQ_HeadersParameter = new ObjectParameter("Id_SVQ_Headers", typeof(global::System.Int32));
            }
    
            ObjectParameter section_NameParameter;
            if (section_Name != null)
            {
                section_NameParameter = new ObjectParameter("Section_Name", section_Name);
            }
            else
            {
                section_NameParameter = new ObjectParameter("Section_Name", typeof(global::System.String));
            }
    
            ObjectParameter section_TitleParameter;
            if (section_Title != null)
            {
                section_TitleParameter = new ObjectParameter("Section_Title", section_Title);
            }
            else
            {
                section_TitleParameter = new ObjectParameter("Section_Title", typeof(global::System.String));
            }
    
            ObjectParameter section_InstructionsParameter;
            if (section_Instructions != null)
            {
                section_InstructionsParameter = new ObjectParameter("Section_Instructions", section_Instructions);
            }
            else
            {
                section_InstructionsParameter = new ObjectParameter("Section_Instructions", typeof(global::System.String));
            }
    
            ObjectParameter is_Required_SectionParameter;
            if (is_Required_Section != null)
            {
                is_Required_SectionParameter = new ObjectParameter("Is_Required_Section", is_Required_Section);
            }
            else
            {
                is_Required_SectionParameter = new ObjectParameter("Is_Required_Section", typeof(global::System.String));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<dPlsSVQSections_Result>("dPlsSVQSections", flagParameter, idParameter, id_SVQ_HeadersParameter, section_NameParameter, section_TitleParameter, section_InstructionsParameter, is_Required_SectionParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="oldPassword">No Metadata Documentation available.</param>
        /// <param name="newPassword">No Metadata Documentation available.</param>
        /// <param name="fullName">No Metadata Documentation available.</param>
        /// <param name="mobileNumber">No Metadata Documentation available.</param>
        /// <param name="emailAddress">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<iPlsUsers_Result> iPlsUsers(global::System.String flag, Nullable<global::System.Int32> userId, global::System.String userName, global::System.String oldPassword, global::System.String newPassword, global::System.String fullName, global::System.String mobileNumber, global::System.String emailAddress, global::System.String status, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Int32));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter oldPasswordParameter;
            if (oldPassword != null)
            {
                oldPasswordParameter = new ObjectParameter("OldPassword", oldPassword);
            }
            else
            {
                oldPasswordParameter = new ObjectParameter("OldPassword", typeof(global::System.String));
            }
    
            ObjectParameter newPasswordParameter;
            if (newPassword != null)
            {
                newPasswordParameter = new ObjectParameter("NewPassword", newPassword);
            }
            else
            {
                newPasswordParameter = new ObjectParameter("NewPassword", typeof(global::System.String));
            }
    
            ObjectParameter fullNameParameter;
            if (fullName != null)
            {
                fullNameParameter = new ObjectParameter("FullName", fullName);
            }
            else
            {
                fullNameParameter = new ObjectParameter("FullName", typeof(global::System.String));
            }
    
            ObjectParameter mobileNumberParameter;
            if (mobileNumber != null)
            {
                mobileNumberParameter = new ObjectParameter("MobileNumber", mobileNumber);
            }
            else
            {
                mobileNumberParameter = new ObjectParameter("MobileNumber", typeof(global::System.String));
            }
    
            ObjectParameter emailAddressParameter;
            if (emailAddress != null)
            {
                emailAddressParameter = new ObjectParameter("EmailAddress", emailAddress);
            }
            else
            {
                emailAddressParameter = new ObjectParameter("EmailAddress", typeof(global::System.String));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.String));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<iPlsUsers_Result>("iPlsUsers", flagParameter, userIdParameter, userNameParameter, oldPasswordParameter, newPasswordParameter, fullNameParameter, mobileNumberParameter, emailAddressParameter, statusParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="oldPassword">No Metadata Documentation available.</param>
        /// <param name="newPassword">No Metadata Documentation available.</param>
        /// <param name="fullName">No Metadata Documentation available.</param>
        /// <param name="mobileNumber">No Metadata Documentation available.</param>
        /// <param name="emailAddress">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<uPlsUsers_Result> uPlsUsers(global::System.String flag, Nullable<global::System.Int32> userId, global::System.String userName, global::System.String oldPassword, global::System.String newPassword, global::System.String fullName, global::System.String mobileNumber, global::System.String emailAddress, global::System.String status, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Int32));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter oldPasswordParameter;
            if (oldPassword != null)
            {
                oldPasswordParameter = new ObjectParameter("OldPassword", oldPassword);
            }
            else
            {
                oldPasswordParameter = new ObjectParameter("OldPassword", typeof(global::System.String));
            }
    
            ObjectParameter newPasswordParameter;
            if (newPassword != null)
            {
                newPasswordParameter = new ObjectParameter("NewPassword", newPassword);
            }
            else
            {
                newPasswordParameter = new ObjectParameter("NewPassword", typeof(global::System.String));
            }
    
            ObjectParameter fullNameParameter;
            if (fullName != null)
            {
                fullNameParameter = new ObjectParameter("FullName", fullName);
            }
            else
            {
                fullNameParameter = new ObjectParameter("FullName", typeof(global::System.String));
            }
    
            ObjectParameter mobileNumberParameter;
            if (mobileNumber != null)
            {
                mobileNumberParameter = new ObjectParameter("MobileNumber", mobileNumber);
            }
            else
            {
                mobileNumberParameter = new ObjectParameter("MobileNumber", typeof(global::System.String));
            }
    
            ObjectParameter emailAddressParameter;
            if (emailAddress != null)
            {
                emailAddressParameter = new ObjectParameter("EmailAddress", emailAddress);
            }
            else
            {
                emailAddressParameter = new ObjectParameter("EmailAddress", typeof(global::System.String));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.String));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<uPlsUsers_Result>("uPlsUsers", flagParameter, userIdParameter, userNameParameter, oldPasswordParameter, newPasswordParameter, fullNameParameter, mobileNumberParameter, emailAddressParameter, statusParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="oldPassword">No Metadata Documentation available.</param>
        /// <param name="newPassword">No Metadata Documentation available.</param>
        /// <param name="fullName">No Metadata Documentation available.</param>
        /// <param name="mobileNumber">No Metadata Documentation available.</param>
        /// <param name="emailAddress">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<pPlsUsers_Result> pPlsUsers(global::System.String flag, Nullable<global::System.Int32> userId, global::System.String userName, global::System.String oldPassword, global::System.String newPassword, global::System.String fullName, global::System.String mobileNumber, global::System.String emailAddress, global::System.String status, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Int32));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter oldPasswordParameter;
            if (oldPassword != null)
            {
                oldPasswordParameter = new ObjectParameter("OldPassword", oldPassword);
            }
            else
            {
                oldPasswordParameter = new ObjectParameter("OldPassword", typeof(global::System.String));
            }
    
            ObjectParameter newPasswordParameter;
            if (newPassword != null)
            {
                newPasswordParameter = new ObjectParameter("NewPassword", newPassword);
            }
            else
            {
                newPasswordParameter = new ObjectParameter("NewPassword", typeof(global::System.String));
            }
    
            ObjectParameter fullNameParameter;
            if (fullName != null)
            {
                fullNameParameter = new ObjectParameter("FullName", fullName);
            }
            else
            {
                fullNameParameter = new ObjectParameter("FullName", typeof(global::System.String));
            }
    
            ObjectParameter mobileNumberParameter;
            if (mobileNumber != null)
            {
                mobileNumberParameter = new ObjectParameter("MobileNumber", mobileNumber);
            }
            else
            {
                mobileNumberParameter = new ObjectParameter("MobileNumber", typeof(global::System.String));
            }
    
            ObjectParameter emailAddressParameter;
            if (emailAddress != null)
            {
                emailAddressParameter = new ObjectParameter("EmailAddress", emailAddress);
            }
            else
            {
                emailAddressParameter = new ObjectParameter("EmailAddress", typeof(global::System.String));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.String));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<pPlsUsers_Result>("pPlsUsers", flagParameter, userIdParameter, userNameParameter, oldPasswordParameter, newPasswordParameter, fullNameParameter, mobileNumberParameter, emailAddressParameter, statusParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="oldPassword">No Metadata Documentation available.</param>
        /// <param name="newPassword">No Metadata Documentation available.</param>
        /// <param name="fullName">No Metadata Documentation available.</param>
        /// <param name="mobileNumber">No Metadata Documentation available.</param>
        /// <param name="emailAddress">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<dPlsUsers_Result> dPlsUsers(global::System.String flag, Nullable<global::System.Int32> userId, global::System.String userName, global::System.String oldPassword, global::System.String newPassword, global::System.String fullName, global::System.String mobileNumber, global::System.String emailAddress, global::System.String status, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Int32));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            ObjectParameter oldPasswordParameter;
            if (oldPassword != null)
            {
                oldPasswordParameter = new ObjectParameter("OldPassword", oldPassword);
            }
            else
            {
                oldPasswordParameter = new ObjectParameter("OldPassword", typeof(global::System.String));
            }
    
            ObjectParameter newPasswordParameter;
            if (newPassword != null)
            {
                newPasswordParameter = new ObjectParameter("NewPassword", newPassword);
            }
            else
            {
                newPasswordParameter = new ObjectParameter("NewPassword", typeof(global::System.String));
            }
    
            ObjectParameter fullNameParameter;
            if (fullName != null)
            {
                fullNameParameter = new ObjectParameter("FullName", fullName);
            }
            else
            {
                fullNameParameter = new ObjectParameter("FullName", typeof(global::System.String));
            }
    
            ObjectParameter mobileNumberParameter;
            if (mobileNumber != null)
            {
                mobileNumberParameter = new ObjectParameter("MobileNumber", mobileNumber);
            }
            else
            {
                mobileNumberParameter = new ObjectParameter("MobileNumber", typeof(global::System.String));
            }
    
            ObjectParameter emailAddressParameter;
            if (emailAddress != null)
            {
                emailAddressParameter = new ObjectParameter("EmailAddress", emailAddress);
            }
            else
            {
                emailAddressParameter = new ObjectParameter("EmailAddress", typeof(global::System.String));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.String));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<dPlsUsers_Result>("dPlsUsers", flagParameter, userIdParameter, userNameParameter, oldPasswordParameter, newPasswordParameter, fullNameParameter, mobileNumberParameter, emailAddressParameter, statusParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="participant_Id">No Metadata Documentation available.</param>
        /// <param name="first_Name">No Metadata Documentation available.</param>
        /// <param name="last_Name">No Metadata Documentation available.</param>
        /// <param name="ward_No">No Metadata Documentation available.</param>
        /// <param name="address">No Metadata Documentation available.</param>
        /// <param name="contact_Number">No Metadata Documentation available.</param>
        /// <param name="interview_Language">No Metadata Documentation available.</param>
        /// <param name="consent_Obtained">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<sPlsParticipants_Result> sPlsParticipants(global::System.String flag, Nullable<global::System.Int32> id, global::System.String participant_Id, global::System.String first_Name, global::System.String last_Name, global::System.String ward_No, global::System.String address, global::System.String contact_Number, global::System.String interview_Language, global::System.String consent_Obtained, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("Id", id);
            }
            else
            {
                idParameter = new ObjectParameter("Id", typeof(global::System.Int32));
            }
    
            ObjectParameter participant_IdParameter;
            if (participant_Id != null)
            {
                participant_IdParameter = new ObjectParameter("Participant_Id", participant_Id);
            }
            else
            {
                participant_IdParameter = new ObjectParameter("Participant_Id", typeof(global::System.String));
            }
    
            ObjectParameter first_NameParameter;
            if (first_Name != null)
            {
                first_NameParameter = new ObjectParameter("First_Name", first_Name);
            }
            else
            {
                first_NameParameter = new ObjectParameter("First_Name", typeof(global::System.String));
            }
    
            ObjectParameter last_NameParameter;
            if (last_Name != null)
            {
                last_NameParameter = new ObjectParameter("Last_Name", last_Name);
            }
            else
            {
                last_NameParameter = new ObjectParameter("Last_Name", typeof(global::System.String));
            }
    
            ObjectParameter ward_NoParameter;
            if (ward_No != null)
            {
                ward_NoParameter = new ObjectParameter("Ward_No", ward_No);
            }
            else
            {
                ward_NoParameter = new ObjectParameter("Ward_No", typeof(global::System.String));
            }
    
            ObjectParameter addressParameter;
            if (address != null)
            {
                addressParameter = new ObjectParameter("Address", address);
            }
            else
            {
                addressParameter = new ObjectParameter("Address", typeof(global::System.String));
            }
    
            ObjectParameter contact_NumberParameter;
            if (contact_Number != null)
            {
                contact_NumberParameter = new ObjectParameter("Contact_Number", contact_Number);
            }
            else
            {
                contact_NumberParameter = new ObjectParameter("Contact_Number", typeof(global::System.String));
            }
    
            ObjectParameter interview_LanguageParameter;
            if (interview_Language != null)
            {
                interview_LanguageParameter = new ObjectParameter("Interview_Language", interview_Language);
            }
            else
            {
                interview_LanguageParameter = new ObjectParameter("Interview_Language", typeof(global::System.String));
            }
    
            ObjectParameter consent_ObtainedParameter;
            if (consent_Obtained != null)
            {
                consent_ObtainedParameter = new ObjectParameter("Consent_Obtained", consent_Obtained);
            }
            else
            {
                consent_ObtainedParameter = new ObjectParameter("Consent_Obtained", typeof(global::System.String));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<sPlsParticipants_Result>("sPlsParticipants", flagParameter, idParameter, participant_IdParameter, first_NameParameter, last_NameParameter, ward_NoParameter, addressParameter, contact_NumberParameter, interview_LanguageParameter, consent_ObtainedParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="participant_Id">No Metadata Documentation available.</param>
        /// <param name="first_Name">No Metadata Documentation available.</param>
        /// <param name="last_Name">No Metadata Documentation available.</param>
        /// <param name="ward_No">No Metadata Documentation available.</param>
        /// <param name="address">No Metadata Documentation available.</param>
        /// <param name="contact_Number">No Metadata Documentation available.</param>
        /// <param name="interview_Language">No Metadata Documentation available.</param>
        /// <param name="consent_Obtained">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<iPlsParticipants_Result> iPlsParticipants(global::System.String flag, Nullable<global::System.Int32> id, global::System.String participant_Id, global::System.String first_Name, global::System.String last_Name, global::System.String ward_No, global::System.String address, global::System.String contact_Number, global::System.String interview_Language, global::System.String consent_Obtained, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("Id", id);
            }
            else
            {
                idParameter = new ObjectParameter("Id", typeof(global::System.Int32));
            }
    
            ObjectParameter participant_IdParameter;
            if (participant_Id != null)
            {
                participant_IdParameter = new ObjectParameter("Participant_Id", participant_Id);
            }
            else
            {
                participant_IdParameter = new ObjectParameter("Participant_Id", typeof(global::System.String));
            }
    
            ObjectParameter first_NameParameter;
            if (first_Name != null)
            {
                first_NameParameter = new ObjectParameter("First_Name", first_Name);
            }
            else
            {
                first_NameParameter = new ObjectParameter("First_Name", typeof(global::System.String));
            }
    
            ObjectParameter last_NameParameter;
            if (last_Name != null)
            {
                last_NameParameter = new ObjectParameter("Last_Name", last_Name);
            }
            else
            {
                last_NameParameter = new ObjectParameter("Last_Name", typeof(global::System.String));
            }
    
            ObjectParameter ward_NoParameter;
            if (ward_No != null)
            {
                ward_NoParameter = new ObjectParameter("Ward_No", ward_No);
            }
            else
            {
                ward_NoParameter = new ObjectParameter("Ward_No", typeof(global::System.String));
            }
    
            ObjectParameter addressParameter;
            if (address != null)
            {
                addressParameter = new ObjectParameter("Address", address);
            }
            else
            {
                addressParameter = new ObjectParameter("Address", typeof(global::System.String));
            }
    
            ObjectParameter contact_NumberParameter;
            if (contact_Number != null)
            {
                contact_NumberParameter = new ObjectParameter("Contact_Number", contact_Number);
            }
            else
            {
                contact_NumberParameter = new ObjectParameter("Contact_Number", typeof(global::System.String));
            }
    
            ObjectParameter interview_LanguageParameter;
            if (interview_Language != null)
            {
                interview_LanguageParameter = new ObjectParameter("Interview_Language", interview_Language);
            }
            else
            {
                interview_LanguageParameter = new ObjectParameter("Interview_Language", typeof(global::System.String));
            }
    
            ObjectParameter consent_ObtainedParameter;
            if (consent_Obtained != null)
            {
                consent_ObtainedParameter = new ObjectParameter("Consent_Obtained", consent_Obtained);
            }
            else
            {
                consent_ObtainedParameter = new ObjectParameter("Consent_Obtained", typeof(global::System.String));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<iPlsParticipants_Result>("iPlsParticipants", flagParameter, idParameter, participant_IdParameter, first_NameParameter, last_NameParameter, ward_NoParameter, addressParameter, contact_NumberParameter, interview_LanguageParameter, consent_ObtainedParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="participant_Id">No Metadata Documentation available.</param>
        /// <param name="first_Name">No Metadata Documentation available.</param>
        /// <param name="last_Name">No Metadata Documentation available.</param>
        /// <param name="ward_No">No Metadata Documentation available.</param>
        /// <param name="address">No Metadata Documentation available.</param>
        /// <param name="contact_Number">No Metadata Documentation available.</param>
        /// <param name="interview_Language">No Metadata Documentation available.</param>
        /// <param name="consent_Obtained">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<uPlsParticipants_Result> uPlsParticipants(global::System.String flag, Nullable<global::System.Int32> id, global::System.String participant_Id, global::System.String first_Name, global::System.String last_Name, global::System.String ward_No, global::System.String address, global::System.String contact_Number, global::System.String interview_Language, global::System.String consent_Obtained, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("Id", id);
            }
            else
            {
                idParameter = new ObjectParameter("Id", typeof(global::System.Int32));
            }
    
            ObjectParameter participant_IdParameter;
            if (participant_Id != null)
            {
                participant_IdParameter = new ObjectParameter("Participant_Id", participant_Id);
            }
            else
            {
                participant_IdParameter = new ObjectParameter("Participant_Id", typeof(global::System.String));
            }
    
            ObjectParameter first_NameParameter;
            if (first_Name != null)
            {
                first_NameParameter = new ObjectParameter("First_Name", first_Name);
            }
            else
            {
                first_NameParameter = new ObjectParameter("First_Name", typeof(global::System.String));
            }
    
            ObjectParameter last_NameParameter;
            if (last_Name != null)
            {
                last_NameParameter = new ObjectParameter("Last_Name", last_Name);
            }
            else
            {
                last_NameParameter = new ObjectParameter("Last_Name", typeof(global::System.String));
            }
    
            ObjectParameter ward_NoParameter;
            if (ward_No != null)
            {
                ward_NoParameter = new ObjectParameter("Ward_No", ward_No);
            }
            else
            {
                ward_NoParameter = new ObjectParameter("Ward_No", typeof(global::System.String));
            }
    
            ObjectParameter addressParameter;
            if (address != null)
            {
                addressParameter = new ObjectParameter("Address", address);
            }
            else
            {
                addressParameter = new ObjectParameter("Address", typeof(global::System.String));
            }
    
            ObjectParameter contact_NumberParameter;
            if (contact_Number != null)
            {
                contact_NumberParameter = new ObjectParameter("Contact_Number", contact_Number);
            }
            else
            {
                contact_NumberParameter = new ObjectParameter("Contact_Number", typeof(global::System.String));
            }
    
            ObjectParameter interview_LanguageParameter;
            if (interview_Language != null)
            {
                interview_LanguageParameter = new ObjectParameter("Interview_Language", interview_Language);
            }
            else
            {
                interview_LanguageParameter = new ObjectParameter("Interview_Language", typeof(global::System.String));
            }
    
            ObjectParameter consent_ObtainedParameter;
            if (consent_Obtained != null)
            {
                consent_ObtainedParameter = new ObjectParameter("Consent_Obtained", consent_Obtained);
            }
            else
            {
                consent_ObtainedParameter = new ObjectParameter("Consent_Obtained", typeof(global::System.String));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<uPlsParticipants_Result>("uPlsParticipants", flagParameter, idParameter, participant_IdParameter, first_NameParameter, last_NameParameter, ward_NoParameter, addressParameter, contact_NumberParameter, interview_LanguageParameter, consent_ObtainedParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="participant_Id">No Metadata Documentation available.</param>
        /// <param name="first_Name">No Metadata Documentation available.</param>
        /// <param name="last_Name">No Metadata Documentation available.</param>
        /// <param name="ward_No">No Metadata Documentation available.</param>
        /// <param name="address">No Metadata Documentation available.</param>
        /// <param name="contact_Number">No Metadata Documentation available.</param>
        /// <param name="interview_Language">No Metadata Documentation available.</param>
        /// <param name="consent_Obtained">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<dPlsParticipants_Result> dPlsParticipants(global::System.String flag, Nullable<global::System.Int32> id, global::System.String participant_Id, global::System.String first_Name, global::System.String last_Name, global::System.String ward_No, global::System.String address, global::System.String contact_Number, global::System.String interview_Language, global::System.String consent_Obtained, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("Id", id);
            }
            else
            {
                idParameter = new ObjectParameter("Id", typeof(global::System.Int32));
            }
    
            ObjectParameter participant_IdParameter;
            if (participant_Id != null)
            {
                participant_IdParameter = new ObjectParameter("Participant_Id", participant_Id);
            }
            else
            {
                participant_IdParameter = new ObjectParameter("Participant_Id", typeof(global::System.String));
            }
    
            ObjectParameter first_NameParameter;
            if (first_Name != null)
            {
                first_NameParameter = new ObjectParameter("First_Name", first_Name);
            }
            else
            {
                first_NameParameter = new ObjectParameter("First_Name", typeof(global::System.String));
            }
    
            ObjectParameter last_NameParameter;
            if (last_Name != null)
            {
                last_NameParameter = new ObjectParameter("Last_Name", last_Name);
            }
            else
            {
                last_NameParameter = new ObjectParameter("Last_Name", typeof(global::System.String));
            }
    
            ObjectParameter ward_NoParameter;
            if (ward_No != null)
            {
                ward_NoParameter = new ObjectParameter("Ward_No", ward_No);
            }
            else
            {
                ward_NoParameter = new ObjectParameter("Ward_No", typeof(global::System.String));
            }
    
            ObjectParameter addressParameter;
            if (address != null)
            {
                addressParameter = new ObjectParameter("Address", address);
            }
            else
            {
                addressParameter = new ObjectParameter("Address", typeof(global::System.String));
            }
    
            ObjectParameter contact_NumberParameter;
            if (contact_Number != null)
            {
                contact_NumberParameter = new ObjectParameter("Contact_Number", contact_Number);
            }
            else
            {
                contact_NumberParameter = new ObjectParameter("Contact_Number", typeof(global::System.String));
            }
    
            ObjectParameter interview_LanguageParameter;
            if (interview_Language != null)
            {
                interview_LanguageParameter = new ObjectParameter("Interview_Language", interview_Language);
            }
            else
            {
                interview_LanguageParameter = new ObjectParameter("Interview_Language", typeof(global::System.String));
            }
    
            ObjectParameter consent_ObtainedParameter;
            if (consent_Obtained != null)
            {
                consent_ObtainedParameter = new ObjectParameter("Consent_Obtained", consent_Obtained);
            }
            else
            {
                consent_ObtainedParameter = new ObjectParameter("Consent_Obtained", typeof(global::System.String));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<dPlsParticipants_Result>("dPlsParticipants", flagParameter, idParameter, participant_IdParameter, first_NameParameter, last_NameParameter, ward_NoParameter, addressParameter, contact_NumberParameter, interview_LanguageParameter, consent_ObtainedParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="projectId">No Metadata Documentation available.</param>
        /// <param name="participant_Id">No Metadata Documentation available.</param>
        /// <param name="session_Id">No Metadata Documentation available.</param>
        /// <param name="sectionId">No Metadata Documentation available.</param>
        /// <param name="id_SVQ_Questions">No Metadata Documentation available.</param>
        /// <param name="id_Option_Groups_Choices">No Metadata Documentation available.</param>
        /// <param name="measurement_Unit">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<sPlsInterviewQuestions_Result> sPlsInterviewQuestions(global::System.String flag, Nullable<global::System.Int32> projectId, global::System.String participant_Id, global::System.String session_Id, global::System.String sectionId, Nullable<global::System.Int32> id_SVQ_Questions, Nullable<global::System.Int32> id_Option_Groups_Choices, Nullable<global::System.Int32> measurement_Unit, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter projectIdParameter;
            if (projectId.HasValue)
            {
                projectIdParameter = new ObjectParameter("ProjectId", projectId);
            }
            else
            {
                projectIdParameter = new ObjectParameter("ProjectId", typeof(global::System.Int32));
            }
    
            ObjectParameter participant_IdParameter;
            if (participant_Id != null)
            {
                participant_IdParameter = new ObjectParameter("Participant_Id", participant_Id);
            }
            else
            {
                participant_IdParameter = new ObjectParameter("Participant_Id", typeof(global::System.String));
            }
    
            ObjectParameter session_IdParameter;
            if (session_Id != null)
            {
                session_IdParameter = new ObjectParameter("Session_Id", session_Id);
            }
            else
            {
                session_IdParameter = new ObjectParameter("Session_Id", typeof(global::System.String));
            }
    
            ObjectParameter sectionIdParameter;
            if (sectionId != null)
            {
                sectionIdParameter = new ObjectParameter("SectionId", sectionId);
            }
            else
            {
                sectionIdParameter = new ObjectParameter("SectionId", typeof(global::System.String));
            }
    
            ObjectParameter id_SVQ_QuestionsParameter;
            if (id_SVQ_Questions.HasValue)
            {
                id_SVQ_QuestionsParameter = new ObjectParameter("Id_SVQ_Questions", id_SVQ_Questions);
            }
            else
            {
                id_SVQ_QuestionsParameter = new ObjectParameter("Id_SVQ_Questions", typeof(global::System.Int32));
            }
    
            ObjectParameter id_Option_Groups_ChoicesParameter;
            if (id_Option_Groups_Choices.HasValue)
            {
                id_Option_Groups_ChoicesParameter = new ObjectParameter("Id_Option_Groups_Choices", id_Option_Groups_Choices);
            }
            else
            {
                id_Option_Groups_ChoicesParameter = new ObjectParameter("Id_Option_Groups_Choices", typeof(global::System.Int32));
            }
    
            ObjectParameter measurement_UnitParameter;
            if (measurement_Unit.HasValue)
            {
                measurement_UnitParameter = new ObjectParameter("Measurement_Unit", measurement_Unit);
            }
            else
            {
                measurement_UnitParameter = new ObjectParameter("Measurement_Unit", typeof(global::System.Int32));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<sPlsInterviewQuestions_Result>("sPlsInterviewQuestions", flagParameter, projectIdParameter, participant_IdParameter, session_IdParameter, sectionIdParameter, id_SVQ_QuestionsParameter, id_Option_Groups_ChoicesParameter, measurement_UnitParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="id_Option_Groups">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<sPlsOptionChoices_Result> sPlsOptionChoices(global::System.String flag, Nullable<global::System.Int32> id_Option_Groups, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter id_Option_GroupsParameter;
            if (id_Option_Groups.HasValue)
            {
                id_Option_GroupsParameter = new ObjectParameter("Id_Option_Groups", id_Option_Groups);
            }
            else
            {
                id_Option_GroupsParameter = new ObjectParameter("Id_Option_Groups", typeof(global::System.Int32));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<sPlsOptionChoices_Result>("sPlsOptionChoices", flagParameter, id_Option_GroupsParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="flag">No Metadata Documentation available.</param>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="id_Institution">No Metadata Documentation available.</param>
        /// <param name="surveyName">No Metadata Documentation available.</param>
        /// <param name="survey_Code">No Metadata Documentation available.</param>
        /// <param name="survey_Instructions">No Metadata Documentation available.</param>
        /// <param name="miscellaneousInfo">No Metadata Documentation available.</param>
        /// <param name="actionUser">No Metadata Documentation available.</param>
        public ObjectResult<iPlsSVQHeaders_Result> iPlsSVQHeaders(global::System.String flag, Nullable<global::System.Int32> id, Nullable<global::System.Int32> id_Institution, global::System.String surveyName, global::System.String survey_Code, global::System.String survey_Instructions, global::System.String miscellaneousInfo, global::System.String actionUser)
        {
            ObjectParameter flagParameter;
            if (flag != null)
            {
                flagParameter = new ObjectParameter("Flag", flag);
            }
            else
            {
                flagParameter = new ObjectParameter("Flag", typeof(global::System.String));
            }
    
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("Id", id);
            }
            else
            {
                idParameter = new ObjectParameter("Id", typeof(global::System.Int32));
            }
    
            ObjectParameter id_InstitutionParameter;
            if (id_Institution.HasValue)
            {
                id_InstitutionParameter = new ObjectParameter("Id_Institution", id_Institution);
            }
            else
            {
                id_InstitutionParameter = new ObjectParameter("Id_Institution", typeof(global::System.Int32));
            }
    
            ObjectParameter surveyNameParameter;
            if (surveyName != null)
            {
                surveyNameParameter = new ObjectParameter("SurveyName", surveyName);
            }
            else
            {
                surveyNameParameter = new ObjectParameter("SurveyName", typeof(global::System.String));
            }
    
            ObjectParameter survey_CodeParameter;
            if (survey_Code != null)
            {
                survey_CodeParameter = new ObjectParameter("Survey_Code", survey_Code);
            }
            else
            {
                survey_CodeParameter = new ObjectParameter("Survey_Code", typeof(global::System.String));
            }
    
            ObjectParameter survey_InstructionsParameter;
            if (survey_Instructions != null)
            {
                survey_InstructionsParameter = new ObjectParameter("Survey_Instructions", survey_Instructions);
            }
            else
            {
                survey_InstructionsParameter = new ObjectParameter("Survey_Instructions", typeof(global::System.String));
            }
    
            ObjectParameter miscellaneousInfoParameter;
            if (miscellaneousInfo != null)
            {
                miscellaneousInfoParameter = new ObjectParameter("MiscellaneousInfo", miscellaneousInfo);
            }
            else
            {
                miscellaneousInfoParameter = new ObjectParameter("MiscellaneousInfo", typeof(global::System.String));
            }
    
            ObjectParameter actionUserParameter;
            if (actionUser != null)
            {
                actionUserParameter = new ObjectParameter("ActionUser", actionUser);
            }
            else
            {
                actionUserParameter = new ObjectParameter("ActionUser", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<iPlsSVQHeaders_Result>("iPlsSVQHeaders", flagParameter, idParameter, id_InstitutionParameter, surveyNameParameter, survey_CodeParameter, survey_InstructionsParameter, miscellaneousInfoParameter, actionUserParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sno">No Metadata Documentation available.</param>
        /// <param name="param">No Metadata Documentation available.</param>
        public ObjectResult<sPlsStaticData_Result> sPlsStaticData(Nullable<global::System.Int32> sno, global::System.String param)
        {
            ObjectParameter snoParameter;
            if (sno.HasValue)
            {
                snoParameter = new ObjectParameter("Sno", sno);
            }
            else
            {
                snoParameter = new ObjectParameter("Sno", typeof(global::System.Int32));
            }
    
            ObjectParameter paramParameter;
            if (param != null)
            {
                paramParameter = new ObjectParameter("param", param);
            }
            else
            {
                paramParameter = new ObjectParameter("param", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<sPlsStaticData_Result>("sPlsStaticData", snoParameter, paramParameter);
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="dPlsParticipants_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class dPlsParticipants_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new dPlsParticipants_Result object.
        /// </summary>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static dPlsParticipants_Result CreatedPlsParticipants_Result(global::System.String status, global::System.String code, global::System.String message)
        {
            dPlsParticipants_Result dPlsParticipants_Result = new dPlsParticipants_Result();
            dPlsParticipants_Result.Status = status;
            dPlsParticipants_Result.Code = code;
            dPlsParticipants_Result.Message = message;
            return dPlsParticipants_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="dPlsSVQQuestions_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class dPlsSVQQuestions_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new dPlsSVQQuestions_Result object.
        /// </summary>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static dPlsSVQQuestions_Result CreatedPlsSVQQuestions_Result(global::System.String status, global::System.String code, global::System.String message)
        {
            dPlsSVQQuestions_Result dPlsSVQQuestions_Result = new dPlsSVQQuestions_Result();
            dPlsSVQQuestions_Result.Status = status;
            dPlsSVQQuestions_Result.Code = code;
            dPlsSVQQuestions_Result.Message = message;
            return dPlsSVQQuestions_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="dPlsSVQSections_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class dPlsSVQSections_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new dPlsSVQSections_Result object.
        /// </summary>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static dPlsSVQSections_Result CreatedPlsSVQSections_Result(global::System.String status, global::System.String code, global::System.String message)
        {
            dPlsSVQSections_Result dPlsSVQSections_Result = new dPlsSVQSections_Result();
            dPlsSVQSections_Result.Status = status;
            dPlsSVQSections_Result.Code = code;
            dPlsSVQSections_Result.Message = message;
            return dPlsSVQSections_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="dPlsUsers_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class dPlsUsers_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new dPlsUsers_Result object.
        /// </summary>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static dPlsUsers_Result CreatedPlsUsers_Result(global::System.String status, global::System.String code, global::System.String message)
        {
            dPlsUsers_Result dPlsUsers_Result = new dPlsUsers_Result();
            dPlsUsers_Result.Status = status;
            dPlsUsers_Result.Code = code;
            dPlsUsers_Result.Message = message;
            return dPlsUsers_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="iPlsParticipants_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class iPlsParticipants_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new iPlsParticipants_Result object.
        /// </summary>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static iPlsParticipants_Result CreateiPlsParticipants_Result(global::System.String status, global::System.String code, global::System.String message)
        {
            iPlsParticipants_Result iPlsParticipants_Result = new iPlsParticipants_Result();
            iPlsParticipants_Result.Status = status;
            iPlsParticipants_Result.Code = code;
            iPlsParticipants_Result.Message = message;
            return iPlsParticipants_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="iPlsSVQHeaders_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class iPlsSVQHeaders_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new iPlsSVQHeaders_Result object.
        /// </summary>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static iPlsSVQHeaders_Result CreateiPlsSVQHeaders_Result(global::System.String status, global::System.String code, global::System.String message)
        {
            iPlsSVQHeaders_Result iPlsSVQHeaders_Result = new iPlsSVQHeaders_Result();
            iPlsSVQHeaders_Result.Status = status;
            iPlsSVQHeaders_Result.Code = code;
            iPlsSVQHeaders_Result.Message = message;
            return iPlsSVQHeaders_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="iPlsSVQQuestions_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class iPlsSVQQuestions_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new iPlsSVQQuestions_Result object.
        /// </summary>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static iPlsSVQQuestions_Result CreateiPlsSVQQuestions_Result(global::System.String status, global::System.String code, global::System.String message)
        {
            iPlsSVQQuestions_Result iPlsSVQQuestions_Result = new iPlsSVQQuestions_Result();
            iPlsSVQQuestions_Result.Status = status;
            iPlsSVQQuestions_Result.Code = code;
            iPlsSVQQuestions_Result.Message = message;
            return iPlsSVQQuestions_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="iPlsSVQSections_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class iPlsSVQSections_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new iPlsSVQSections_Result object.
        /// </summary>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static iPlsSVQSections_Result CreateiPlsSVQSections_Result(global::System.String status, global::System.String code, global::System.String message)
        {
            iPlsSVQSections_Result iPlsSVQSections_Result = new iPlsSVQSections_Result();
            iPlsSVQSections_Result.Status = status;
            iPlsSVQSections_Result.Code = code;
            iPlsSVQSections_Result.Message = message;
            return iPlsSVQSections_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="iPlsUsers_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class iPlsUsers_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new iPlsUsers_Result object.
        /// </summary>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static iPlsUsers_Result CreateiPlsUsers_Result(global::System.String status, global::System.String code, global::System.String message)
        {
            iPlsUsers_Result iPlsUsers_Result = new iPlsUsers_Result();
            iPlsUsers_Result.Status = status;
            iPlsUsers_Result.Code = code;
            iPlsUsers_Result.Message = message;
            return iPlsUsers_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="PlsUserAuthentication_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PlsUserAuthentication_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlsUserAuthentication_Result object.
        /// </summary>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static PlsUserAuthentication_Result CreatePlsUserAuthentication_Result(global::System.String status, global::System.String code, global::System.String message)
        {
            PlsUserAuthentication_Result plsUserAuthentication_Result = new PlsUserAuthentication_Result();
            plsUserAuthentication_Result.Status = status;
            plsUserAuthentication_Result.Code = code;
            plsUserAuthentication_Result.Message = message;
            return plsUserAuthentication_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="pPlsUsers_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class pPlsUsers_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new pPlsUsers_Result object.
        /// </summary>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static pPlsUsers_Result CreatepPlsUsers_Result(global::System.String status, global::System.String code, global::System.String message)
        {
            pPlsUsers_Result pPlsUsers_Result = new pPlsUsers_Result();
            pPlsUsers_Result.Status = status;
            pPlsUsers_Result.Code = code;
            pPlsUsers_Result.Message = message;
            return pPlsUsers_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="sPlsInterviewQuestions_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sPlsInterviewQuestions_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sPlsInterviewQuestions_Result object.
        /// </summary>
        /// <param name="id_SVQ_Sections">Initial value of the Id_SVQ_Sections property.</param>
        /// <param name="id_Input_Types">Initial value of the Id_Input_Types property.</param>
        /// <param name="session_Id">Initial value of the Session_Id property.</param>
        /// <param name="id_SVQ_Questions">Initial value of the Id_SVQ_Questions property.</param>
        public static sPlsInterviewQuestions_Result CreatesPlsInterviewQuestions_Result(global::System.Int32 id_SVQ_Sections, global::System.Int32 id_Input_Types, global::System.String session_Id, global::System.Int32 id_SVQ_Questions)
        {
            sPlsInterviewQuestions_Result sPlsInterviewQuestions_Result = new sPlsInterviewQuestions_Result();
            sPlsInterviewQuestions_Result.Id_SVQ_Sections = id_SVQ_Sections;
            sPlsInterviewQuestions_Result.Id_Input_Types = id_Input_Types;
            sPlsInterviewQuestions_Result.Session_Id = session_Id;
            sPlsInterviewQuestions_Result.Id_SVQ_Questions = id_SVQ_Questions;
            return sPlsInterviewQuestions_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id_SVQ_Sections
        {
            get
            {
                return _Id_SVQ_Sections;
            }
            set
            {
                OnId_SVQ_SectionsChanging(value);
                ReportPropertyChanging("Id_SVQ_Sections");
                _Id_SVQ_Sections = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_SVQ_Sections");
                OnId_SVQ_SectionsChanged();
            }
        }
        private global::System.Int32 _Id_SVQ_Sections;
        partial void OnId_SVQ_SectionsChanging(global::System.Int32 value);
        partial void OnId_SVQ_SectionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id_Input_Types
        {
            get
            {
                return _Id_Input_Types;
            }
            set
            {
                OnId_Input_TypesChanging(value);
                ReportPropertyChanging("Id_Input_Types");
                _Id_Input_Types = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Input_Types");
                OnId_Input_TypesChanged();
            }
        }
        private global::System.Int32 _Id_Input_Types;
        partial void OnId_Input_TypesChanging(global::System.Int32 value);
        partial void OnId_Input_TypesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Id_Option_Groups
        {
            get
            {
                return _Id_Option_Groups;
            }
            set
            {
                OnId_Option_GroupsChanging(value);
                ReportPropertyChanging("Id_Option_Groups");
                _Id_Option_Groups = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Option_Groups");
                OnId_Option_GroupsChanged();
            }
        }
        private Nullable<global::System.Int32> _Id_Option_Groups;
        partial void OnId_Option_GroupsChanging(Nullable<global::System.Int32> value);
        partial void OnId_Option_GroupsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Question_Name
        {
            get
            {
                return _Question_Name;
            }
            set
            {
                OnQuestion_NameChanging(value);
                ReportPropertyChanging("Question_Name");
                _Question_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Question_Name");
                OnQuestion_NameChanged();
            }
        }
        private global::System.String _Question_Name;
        partial void OnQuestion_NameChanging(global::System.String value);
        partial void OnQuestion_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Question_Subtext
        {
            get
            {
                return _Question_Subtext;
            }
            set
            {
                OnQuestion_SubtextChanging(value);
                ReportPropertyChanging("Question_Subtext");
                _Question_Subtext = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Question_Subtext");
                OnQuestion_SubtextChanged();
            }
        }
        private global::System.String _Question_Subtext;
        partial void OnQuestion_SubtextChanging(global::System.String value);
        partial void OnQuestion_SubtextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Question_Code
        {
            get
            {
                return _Question_Code;
            }
            set
            {
                OnQuestion_CodeChanging(value);
                ReportPropertyChanging("Question_Code");
                _Question_Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Question_Code");
                OnQuestion_CodeChanged();
            }
        }
        private global::System.String _Question_Code;
        partial void OnQuestion_CodeChanging(global::System.String value);
        partial void OnQuestion_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Measurement_Unit
        {
            get
            {
                return _Measurement_Unit;
            }
            set
            {
                OnMeasurement_UnitChanging(value);
                ReportPropertyChanging("Measurement_Unit");
                _Measurement_Unit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Measurement_Unit");
                OnMeasurement_UnitChanged();
            }
        }
        private Nullable<global::System.Int32> _Measurement_Unit;
        partial void OnMeasurement_UnitChanging(Nullable<global::System.Int32> value);
        partial void OnMeasurement_UnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Id_SVQ_Headers
        {
            get
            {
                return _Id_SVQ_Headers;
            }
            set
            {
                OnId_SVQ_HeadersChanging(value);
                ReportPropertyChanging("Id_SVQ_Headers");
                _Id_SVQ_Headers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_SVQ_Headers");
                OnId_SVQ_HeadersChanged();
            }
        }
        private Nullable<global::System.Int32> _Id_SVQ_Headers;
        partial void OnId_SVQ_HeadersChanging(Nullable<global::System.Int32> value);
        partial void OnId_SVQ_HeadersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Section_Name
        {
            get
            {
                return _Section_Name;
            }
            set
            {
                OnSection_NameChanging(value);
                ReportPropertyChanging("Section_Name");
                _Section_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Section_Name");
                OnSection_NameChanged();
            }
        }
        private global::System.String _Section_Name;
        partial void OnSection_NameChanging(global::System.String value);
        partial void OnSection_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Section_Title
        {
            get
            {
                return _Section_Title;
            }
            set
            {
                OnSection_TitleChanging(value);
                ReportPropertyChanging("Section_Title");
                _Section_Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Section_Title");
                OnSection_TitleChanged();
            }
        }
        private global::System.String _Section_Title;
        partial void OnSection_TitleChanging(global::System.String value);
        partial void OnSection_TitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Section_Instructions
        {
            get
            {
                return _Section_Instructions;
            }
            set
            {
                OnSection_InstructionsChanging(value);
                ReportPropertyChanging("Section_Instructions");
                _Section_Instructions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Section_Instructions");
                OnSection_InstructionsChanged();
            }
        }
        private global::System.String _Section_Instructions;
        partial void OnSection_InstructionsChanging(global::System.String value);
        partial void OnSection_InstructionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Is_Required_Section
        {
            get
            {
                return _Is_Required_Section;
            }
            set
            {
                OnIs_Required_SectionChanging(value);
                ReportPropertyChanging("Is_Required_Section");
                _Is_Required_Section = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Is_Required_Section");
                OnIs_Required_SectionChanged();
            }
        }
        private global::System.String _Is_Required_Section;
        partial void OnIs_Required_SectionChanging(global::System.String value);
        partial void OnIs_Required_SectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Id_Institutions
        {
            get
            {
                return _Id_Institutions;
            }
            set
            {
                OnId_InstitutionsChanging(value);
                ReportPropertyChanging("Id_Institutions");
                _Id_Institutions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Institutions");
                OnId_InstitutionsChanged();
            }
        }
        private Nullable<global::System.Int32> _Id_Institutions;
        partial void OnId_InstitutionsChanging(Nullable<global::System.Int32> value);
        partial void OnId_InstitutionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Survey_Name
        {
            get
            {
                return _Survey_Name;
            }
            set
            {
                OnSurvey_NameChanging(value);
                ReportPropertyChanging("Survey_Name");
                _Survey_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Survey_Name");
                OnSurvey_NameChanged();
            }
        }
        private global::System.String _Survey_Name;
        partial void OnSurvey_NameChanging(global::System.String value);
        partial void OnSurvey_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Survey_Code
        {
            get
            {
                return _Survey_Code;
            }
            set
            {
                OnSurvey_CodeChanging(value);
                ReportPropertyChanging("Survey_Code");
                _Survey_Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Survey_Code");
                OnSurvey_CodeChanged();
            }
        }
        private global::System.String _Survey_Code;
        partial void OnSurvey_CodeChanging(global::System.String value);
        partial void OnSurvey_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Survey_Instructions
        {
            get
            {
                return _Survey_Instructions;
            }
            set
            {
                OnSurvey_InstructionsChanging(value);
                ReportPropertyChanging("Survey_Instructions");
                _Survey_Instructions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Survey_Instructions");
                OnSurvey_InstructionsChanged();
            }
        }
        private global::System.String _Survey_Instructions;
        partial void OnSurvey_InstructionsChanging(global::System.String value);
        partial void OnSurvey_InstructionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Session_Id
        {
            get
            {
                return _Session_Id;
            }
            set
            {
                OnSession_IdChanging(value);
                ReportPropertyChanging("Session_Id");
                _Session_Id = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Session_Id");
                OnSession_IdChanged();
            }
        }
        private global::System.String _Session_Id;
        partial void OnSession_IdChanging(global::System.String value);
        partial void OnSession_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id_SVQ_Questions
        {
            get
            {
                return _Id_SVQ_Questions;
            }
            set
            {
                OnId_SVQ_QuestionsChanging(value);
                ReportPropertyChanging("Id_SVQ_Questions");
                _Id_SVQ_Questions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_SVQ_Questions");
                OnId_SVQ_QuestionsChanged();
            }
        }
        private global::System.Int32 _Id_SVQ_Questions;
        partial void OnId_SVQ_QuestionsChanging(global::System.Int32 value);
        partial void OnId_SVQ_QuestionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectId;
        partial void OnProjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="sPlsOptionChoices_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sPlsOptionChoices_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Id_Option_Groups_Choices
        {
            get
            {
                return _Id_Option_Groups_Choices;
            }
            set
            {
                OnId_Option_Groups_ChoicesChanging(value);
                ReportPropertyChanging("Id_Option_Groups_Choices");
                _Id_Option_Groups_Choices = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Option_Groups_Choices");
                OnId_Option_Groups_ChoicesChanged();
            }
        }
        private Nullable<global::System.Int32> _Id_Option_Groups_Choices;
        partial void OnId_Option_Groups_ChoicesChanging(Nullable<global::System.Int32> value);
        partial void OnId_Option_Groups_ChoicesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Option_Choice_Name
        {
            get
            {
                return _Option_Choice_Name;
            }
            set
            {
                OnOption_Choice_NameChanging(value);
                ReportPropertyChanging("Option_Choice_Name");
                _Option_Choice_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Option_Choice_Name");
                OnOption_Choice_NameChanged();
            }
        }
        private global::System.String _Option_Choice_Name;
        partial void OnOption_Choice_NameChanging(global::System.String value);
        partial void OnOption_Choice_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Option_Choice_Code
        {
            get
            {
                return _Option_Choice_Code;
            }
            set
            {
                OnOption_Choice_CodeChanging(value);
                ReportPropertyChanging("Option_Choice_Code");
                _Option_Choice_Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Option_Choice_Code");
                OnOption_Choice_CodeChanged();
            }
        }
        private global::System.String _Option_Choice_Code;
        partial void OnOption_Choice_CodeChanging(global::System.String value);
        partial void OnOption_Choice_CodeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="sPlsParticipants_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sPlsParticipants_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sPlsParticipants_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="participantId">Initial value of the ParticipantId property.</param>
        public static sPlsParticipants_Result CreatesPlsParticipants_Result(global::System.Int32 id, global::System.String participantId)
        {
            sPlsParticipants_Result sPlsParticipants_Result = new sPlsParticipants_Result();
            sPlsParticipants_Result.Id = id;
            sPlsParticipants_Result.ParticipantId = participantId;
            return sPlsParticipants_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ParticipantId
        {
            get
            {
                return _ParticipantId;
            }
            set
            {
                OnParticipantIdChanging(value);
                ReportPropertyChanging("ParticipantId");
                _ParticipantId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ParticipantId");
                OnParticipantIdChanged();
            }
        }
        private global::System.String _ParticipantId;
        partial void OnParticipantIdChanging(global::System.String value);
        partial void OnParticipantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String First_Name
        {
            get
            {
                return _First_Name;
            }
            set
            {
                OnFirst_NameChanging(value);
                ReportPropertyChanging("First_Name");
                _First_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("First_Name");
                OnFirst_NameChanged();
            }
        }
        private global::System.String _First_Name;
        partial void OnFirst_NameChanging(global::System.String value);
        partial void OnFirst_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Last_Name
        {
            get
            {
                return _Last_Name;
            }
            set
            {
                OnLast_NameChanging(value);
                ReportPropertyChanging("Last_Name");
                _Last_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Last_Name");
                OnLast_NameChanged();
            }
        }
        private global::System.String _Last_Name;
        partial void OnLast_NameChanging(global::System.String value);
        partial void OnLast_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Contact_Number
        {
            get
            {
                return _Contact_Number;
            }
            set
            {
                OnContact_NumberChanging(value);
                ReportPropertyChanging("Contact_Number");
                _Contact_Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Contact_Number");
                OnContact_NumberChanged();
            }
        }
        private global::System.String _Contact_Number;
        partial void OnContact_NumberChanging(global::System.String value);
        partial void OnContact_NumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Interview_Language
        {
            get
            {
                return _Interview_Language;
            }
            set
            {
                OnInterview_LanguageChanging(value);
                ReportPropertyChanging("Interview_Language");
                _Interview_Language = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Interview_Language");
                OnInterview_LanguageChanged();
            }
        }
        private global::System.String _Interview_Language;
        partial void OnInterview_LanguageChanging(global::System.String value);
        partial void OnInterview_LanguageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Consent_Obtained
        {
            get
            {
                return _Consent_Obtained;
            }
            set
            {
                OnConsent_ObtainedChanging(value);
                ReportPropertyChanging("Consent_Obtained");
                _Consent_Obtained = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Consent_Obtained");
                OnConsent_ObtainedChanged();
            }
        }
        private global::System.String _Consent_Obtained;
        partial void OnConsent_ObtainedChanging(global::System.String value);
        partial void OnConsent_ObtainedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ward_No
        {
            get
            {
                return _Ward_No;
            }
            set
            {
                OnWard_NoChanging(value);
                ReportPropertyChanging("Ward_No");
                _Ward_No = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ward_No");
                OnWard_NoChanged();
            }
        }
        private global::System.String _Ward_No;
        partial void OnWard_NoChanging(global::System.String value);
        partial void OnWard_NoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDate
        {
            get
            {
                return _UpdatedDate;
            }
            set
            {
                OnUpdatedDateChanging(value);
                ReportPropertyChanging("UpdatedDate");
                _UpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDate");
                OnUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDate;
        partial void OnUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="sPlsStaticData_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sPlsStaticData_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sPlsStaticData_Result object.
        /// </summary>
        /// <param name="label">Initial value of the Label property.</param>
        public static sPlsStaticData_Result CreatesPlsStaticData_Result(global::System.String label)
        {
            sPlsStaticData_Result sPlsStaticData_Result = new sPlsStaticData_Result();
            sPlsStaticData_Result.Label = label;
            return sPlsStaticData_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Label
        {
            get
            {
                return _Label;
            }
            set
            {
                OnLabelChanging(value);
                ReportPropertyChanging("Label");
                _Label = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Label");
                OnLabelChanged();
            }
        }
        private global::System.String _Label;
        partial void OnLabelChanging(global::System.String value);
        partial void OnLabelChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="sPlsSVQHeaders_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sPlsSVQHeaders_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sPlsSVQHeaders_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="id_Institutions">Initial value of the Id_Institutions property.</param>
        /// <param name="survey_Name">Initial value of the Survey_Name property.</param>
        public static sPlsSVQHeaders_Result CreatesPlsSVQHeaders_Result(global::System.Int32 id, global::System.Int32 id_Institutions, global::System.String survey_Name)
        {
            sPlsSVQHeaders_Result sPlsSVQHeaders_Result = new sPlsSVQHeaders_Result();
            sPlsSVQHeaders_Result.Id = id;
            sPlsSVQHeaders_Result.Id_Institutions = id_Institutions;
            sPlsSVQHeaders_Result.Survey_Name = survey_Name;
            return sPlsSVQHeaders_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id_Institutions
        {
            get
            {
                return _Id_Institutions;
            }
            set
            {
                OnId_InstitutionsChanging(value);
                ReportPropertyChanging("Id_Institutions");
                _Id_Institutions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Institutions");
                OnId_InstitutionsChanged();
            }
        }
        private global::System.Int32 _Id_Institutions;
        partial void OnId_InstitutionsChanging(global::System.Int32 value);
        partial void OnId_InstitutionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Survey_Name
        {
            get
            {
                return _Survey_Name;
            }
            set
            {
                OnSurvey_NameChanging(value);
                ReportPropertyChanging("Survey_Name");
                _Survey_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Survey_Name");
                OnSurvey_NameChanged();
            }
        }
        private global::System.String _Survey_Name;
        partial void OnSurvey_NameChanging(global::System.String value);
        partial void OnSurvey_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Survey_Code
        {
            get
            {
                return _Survey_Code;
            }
            set
            {
                OnSurvey_CodeChanging(value);
                ReportPropertyChanging("Survey_Code");
                _Survey_Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Survey_Code");
                OnSurvey_CodeChanged();
            }
        }
        private global::System.String _Survey_Code;
        partial void OnSurvey_CodeChanging(global::System.String value);
        partial void OnSurvey_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Survey_Instructions
        {
            get
            {
                return _Survey_Instructions;
            }
            set
            {
                OnSurvey_InstructionsChanging(value);
                ReportPropertyChanging("Survey_Instructions");
                _Survey_Instructions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Survey_Instructions");
                OnSurvey_InstructionsChanged();
            }
        }
        private global::System.String _Survey_Instructions;
        partial void OnSurvey_InstructionsChanging(global::System.String value);
        partial void OnSurvey_InstructionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Miscellaneous_Info
        {
            get
            {
                return _Miscellaneous_Info;
            }
            set
            {
                OnMiscellaneous_InfoChanging(value);
                ReportPropertyChanging("Miscellaneous_Info");
                _Miscellaneous_Info = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Miscellaneous_Info");
                OnMiscellaneous_InfoChanged();
            }
        }
        private global::System.String _Miscellaneous_Info;
        partial void OnMiscellaneous_InfoChanging(global::System.String value);
        partial void OnMiscellaneous_InfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.String _CreatedDate;
        partial void OnCreatedDateChanging(global::System.String value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="sPlsSVQQuestions_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sPlsSVQQuestions_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sPlsSVQQuestions_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="id_SVQ_Sections">Initial value of the Id_SVQ_Sections property.</param>
        /// <param name="id_Input_Types">Initial value of the Id_Input_Types property.</param>
        public static sPlsSVQQuestions_Result CreatesPlsSVQQuestions_Result(global::System.Int32 id, global::System.Int32 id_SVQ_Sections, global::System.Int32 id_Input_Types)
        {
            sPlsSVQQuestions_Result sPlsSVQQuestions_Result = new sPlsSVQQuestions_Result();
            sPlsSVQQuestions_Result.Id = id;
            sPlsSVQQuestions_Result.Id_SVQ_Sections = id_SVQ_Sections;
            sPlsSVQQuestions_Result.Id_Input_Types = id_Input_Types;
            return sPlsSVQQuestions_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id_SVQ_Sections
        {
            get
            {
                return _Id_SVQ_Sections;
            }
            set
            {
                OnId_SVQ_SectionsChanging(value);
                ReportPropertyChanging("Id_SVQ_Sections");
                _Id_SVQ_Sections = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_SVQ_Sections");
                OnId_SVQ_SectionsChanged();
            }
        }
        private global::System.Int32 _Id_SVQ_Sections;
        partial void OnId_SVQ_SectionsChanging(global::System.Int32 value);
        partial void OnId_SVQ_SectionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id_Input_Types
        {
            get
            {
                return _Id_Input_Types;
            }
            set
            {
                OnId_Input_TypesChanging(value);
                ReportPropertyChanging("Id_Input_Types");
                _Id_Input_Types = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Input_Types");
                OnId_Input_TypesChanged();
            }
        }
        private global::System.Int32 _Id_Input_Types;
        partial void OnId_Input_TypesChanging(global::System.Int32 value);
        partial void OnId_Input_TypesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Question_Name
        {
            get
            {
                return _Question_Name;
            }
            set
            {
                OnQuestion_NameChanging(value);
                ReportPropertyChanging("Question_Name");
                _Question_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Question_Name");
                OnQuestion_NameChanged();
            }
        }
        private global::System.String _Question_Name;
        partial void OnQuestion_NameChanging(global::System.String value);
        partial void OnQuestion_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Question_Subtext
        {
            get
            {
                return _Question_Subtext;
            }
            set
            {
                OnQuestion_SubtextChanging(value);
                ReportPropertyChanging("Question_Subtext");
                _Question_Subtext = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Question_Subtext");
                OnQuestion_SubtextChanged();
            }
        }
        private global::System.String _Question_Subtext;
        partial void OnQuestion_SubtextChanging(global::System.String value);
        partial void OnQuestion_SubtextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Question_Code
        {
            get
            {
                return _Question_Code;
            }
            set
            {
                OnQuestion_CodeChanging(value);
                ReportPropertyChanging("Question_Code");
                _Question_Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Question_Code");
                OnQuestion_CodeChanged();
            }
        }
        private global::System.String _Question_Code;
        partial void OnQuestion_CodeChanging(global::System.String value);
        partial void OnQuestion_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Measurement_Unit
        {
            get
            {
                return _Measurement_Unit;
            }
            set
            {
                OnMeasurement_UnitChanging(value);
                ReportPropertyChanging("Measurement_Unit");
                _Measurement_Unit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Measurement_Unit");
                OnMeasurement_UnitChanged();
            }
        }
        private Nullable<global::System.Int32> _Measurement_Unit;
        partial void OnMeasurement_UnitChanging(Nullable<global::System.Int32> value);
        partial void OnMeasurement_UnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Id_SVQ_Headers
        {
            get
            {
                return _Id_SVQ_Headers;
            }
            set
            {
                OnId_SVQ_HeadersChanging(value);
                ReportPropertyChanging("Id_SVQ_Headers");
                _Id_SVQ_Headers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_SVQ_Headers");
                OnId_SVQ_HeadersChanged();
            }
        }
        private Nullable<global::System.Int32> _Id_SVQ_Headers;
        partial void OnId_SVQ_HeadersChanging(Nullable<global::System.Int32> value);
        partial void OnId_SVQ_HeadersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Section_Name
        {
            get
            {
                return _Section_Name;
            }
            set
            {
                OnSection_NameChanging(value);
                ReportPropertyChanging("Section_Name");
                _Section_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Section_Name");
                OnSection_NameChanged();
            }
        }
        private global::System.String _Section_Name;
        partial void OnSection_NameChanging(global::System.String value);
        partial void OnSection_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Section_Title
        {
            get
            {
                return _Section_Title;
            }
            set
            {
                OnSection_TitleChanging(value);
                ReportPropertyChanging("Section_Title");
                _Section_Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Section_Title");
                OnSection_TitleChanged();
            }
        }
        private global::System.String _Section_Title;
        partial void OnSection_TitleChanging(global::System.String value);
        partial void OnSection_TitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Section_Instructions
        {
            get
            {
                return _Section_Instructions;
            }
            set
            {
                OnSection_InstructionsChanging(value);
                ReportPropertyChanging("Section_Instructions");
                _Section_Instructions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Section_Instructions");
                OnSection_InstructionsChanged();
            }
        }
        private global::System.String _Section_Instructions;
        partial void OnSection_InstructionsChanging(global::System.String value);
        partial void OnSection_InstructionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Is_Required_Section
        {
            get
            {
                return _Is_Required_Section;
            }
            set
            {
                OnIs_Required_SectionChanging(value);
                ReportPropertyChanging("Is_Required_Section");
                _Is_Required_Section = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Is_Required_Section");
                OnIs_Required_SectionChanged();
            }
        }
        private global::System.String _Is_Required_Section;
        partial void OnIs_Required_SectionChanging(global::System.String value);
        partial void OnIs_Required_SectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Id_Option_Groups
        {
            get
            {
                return _Id_Option_Groups;
            }
            set
            {
                OnId_Option_GroupsChanging(value);
                ReportPropertyChanging("Id_Option_Groups");
                _Id_Option_Groups = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Option_Groups");
                OnId_Option_GroupsChanged();
            }
        }
        private Nullable<global::System.Int32> _Id_Option_Groups;
        partial void OnId_Option_GroupsChanging(Nullable<global::System.Int32> value);
        partial void OnId_Option_GroupsChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="sPlsSVQSections_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sPlsSVQSections_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sPlsSVQSections_Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="id_SVQ_Headers">Initial value of the Id_SVQ_Headers property.</param>
        /// <param name="section_Name">Initial value of the Section_Name property.</param>
        /// <param name="section_Title">Initial value of the Section_Title property.</param>
        public static sPlsSVQSections_Result CreatesPlsSVQSections_Result(global::System.Int32 id, global::System.Int32 id_SVQ_Headers, global::System.String section_Name, global::System.String section_Title)
        {
            sPlsSVQSections_Result sPlsSVQSections_Result = new sPlsSVQSections_Result();
            sPlsSVQSections_Result.Id = id;
            sPlsSVQSections_Result.Id_SVQ_Headers = id_SVQ_Headers;
            sPlsSVQSections_Result.Section_Name = section_Name;
            sPlsSVQSections_Result.Section_Title = section_Title;
            return sPlsSVQSections_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id_SVQ_Headers
        {
            get
            {
                return _Id_SVQ_Headers;
            }
            set
            {
                OnId_SVQ_HeadersChanging(value);
                ReportPropertyChanging("Id_SVQ_Headers");
                _Id_SVQ_Headers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_SVQ_Headers");
                OnId_SVQ_HeadersChanged();
            }
        }
        private global::System.Int32 _Id_SVQ_Headers;
        partial void OnId_SVQ_HeadersChanging(global::System.Int32 value);
        partial void OnId_SVQ_HeadersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Section_Name
        {
            get
            {
                return _Section_Name;
            }
            set
            {
                OnSection_NameChanging(value);
                ReportPropertyChanging("Section_Name");
                _Section_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Section_Name");
                OnSection_NameChanged();
            }
        }
        private global::System.String _Section_Name;
        partial void OnSection_NameChanging(global::System.String value);
        partial void OnSection_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Section_Title
        {
            get
            {
                return _Section_Title;
            }
            set
            {
                OnSection_TitleChanging(value);
                ReportPropertyChanging("Section_Title");
                _Section_Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Section_Title");
                OnSection_TitleChanged();
            }
        }
        private global::System.String _Section_Title;
        partial void OnSection_TitleChanging(global::System.String value);
        partial void OnSection_TitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Section_Instructions
        {
            get
            {
                return _Section_Instructions;
            }
            set
            {
                OnSection_InstructionsChanging(value);
                ReportPropertyChanging("Section_Instructions");
                _Section_Instructions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Section_Instructions");
                OnSection_InstructionsChanged();
            }
        }
        private global::System.String _Section_Instructions;
        partial void OnSection_InstructionsChanging(global::System.String value);
        partial void OnSection_InstructionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Is_Required_Section
        {
            get
            {
                return _Is_Required_Section;
            }
            set
            {
                OnIs_Required_SectionChanging(value);
                ReportPropertyChanging("Is_Required_Section");
                _Is_Required_Section = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Is_Required_Section");
                OnIs_Required_SectionChanged();
            }
        }
        private global::System.String _Is_Required_Section;
        partial void OnIs_Required_SectionChanging(global::System.String value);
        partial void OnIs_Required_SectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="sPlsUsers_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sPlsUsers_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sPlsUsers_Result object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="mobileNumber">Initial value of the MobileNumber property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static sPlsUsers_Result CreatesPlsUsers_Result(global::System.Int32 userId, global::System.String userName, global::System.String fullName, global::System.String mobileNumber, global::System.String emailAddress, global::System.String createdBy, global::System.DateTime createdDate)
        {
            sPlsUsers_Result sPlsUsers_Result = new sPlsUsers_Result();
            sPlsUsers_Result.UserId = userId;
            sPlsUsers_Result.UserName = userName;
            sPlsUsers_Result.FullName = fullName;
            sPlsUsers_Result.MobileNumber = mobileNumber;
            sPlsUsers_Result.EmailAddress = emailAddress;
            sPlsUsers_Result.CreatedBy = createdBy;
            sPlsUsers_Result.CreatedDate = createdDate;
            return sPlsUsers_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MobileNumber
        {
            get
            {
                return _MobileNumber;
            }
            set
            {
                OnMobileNumberChanging(value);
                ReportPropertyChanging("MobileNumber");
                _MobileNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MobileNumber");
                OnMobileNumberChanged();
            }
        }
        private global::System.String _MobileNumber;
        partial void OnMobileNumberChanging(global::System.String value);
        partial void OnMobileNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastLoginIp
        {
            get
            {
                return _LastLoginIp;
            }
            set
            {
                OnLastLoginIpChanging(value);
                ReportPropertyChanging("LastLoginIp");
                _LastLoginIp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastLoginIp");
                OnLastLoginIpChanged();
            }
        }
        private global::System.String _LastLoginIp;
        partial void OnLastLoginIpChanging(global::System.String value);
        partial void OnLastLoginIpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLoginDate;
        partial void OnLastLoginDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDate
        {
            get
            {
                return _UpdatedDate;
            }
            set
            {
                OnUpdatedDateChanging(value);
                ReportPropertyChanging("UpdatedDate");
                _UpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDate");
                OnUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDate;
        partial void OnUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="uPlsParticipants_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class uPlsParticipants_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new uPlsParticipants_Result object.
        /// </summary>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static uPlsParticipants_Result CreateuPlsParticipants_Result(global::System.String status, global::System.String code, global::System.String message)
        {
            uPlsParticipants_Result uPlsParticipants_Result = new uPlsParticipants_Result();
            uPlsParticipants_Result.Status = status;
            uPlsParticipants_Result.Code = code;
            uPlsParticipants_Result.Message = message;
            return uPlsParticipants_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="uPlsSVQQuestions_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class uPlsSVQQuestions_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new uPlsSVQQuestions_Result object.
        /// </summary>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static uPlsSVQQuestions_Result CreateuPlsSVQQuestions_Result(global::System.String status, global::System.String code, global::System.String message)
        {
            uPlsSVQQuestions_Result uPlsSVQQuestions_Result = new uPlsSVQQuestions_Result();
            uPlsSVQQuestions_Result.Status = status;
            uPlsSVQQuestions_Result.Code = code;
            uPlsSVQQuestions_Result.Message = message;
            return uPlsSVQQuestions_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="uPlsSVQSections_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class uPlsSVQSections_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new uPlsSVQSections_Result object.
        /// </summary>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static uPlsSVQSections_Result CreateuPlsSVQSections_Result(global::System.String status, global::System.String code, global::System.String message)
        {
            uPlsSVQSections_Result uPlsSVQSections_Result = new uPlsSVQSections_Result();
            uPlsSVQSections_Result.Status = status;
            uPlsSVQSections_Result.Code = code;
            uPlsSVQSections_Result.Message = message;
            return uPlsSVQSections_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="CobinModel", Name="uPlsUsers_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class uPlsUsers_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new uPlsUsers_Result object.
        /// </summary>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static uPlsUsers_Result CreateuPlsUsers_Result(global::System.String status, global::System.String code, global::System.String message)
        {
            uPlsUsers_Result uPlsUsers_Result = new uPlsUsers_Result();
            uPlsUsers_Result.Status = status;
            uPlsUsers_Result.Code = code;
            uPlsUsers_Result.Message = message;
            return uPlsUsers_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion

    }

    #endregion

    
}
